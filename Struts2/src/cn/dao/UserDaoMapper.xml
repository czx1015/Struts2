<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dao.UserDao">
	<!-- parameterType：指定输入 参数类型是pojo（包括 用户信息）
		#{}中指定pojo的属性名，接收到pojo对象的属性值，mybatis通过OGNL获取对象的属性值 -->
	<!-- 用户登录 ，用户名和密码是否匹配-->
	<select id="loginUser" resultType="User">
		select * from tb_users where name=#{name} and pwd=#{pwd}
	</select>
	<!--查询用户名是否存在  -->
	<select id="selectName" resultType="User">
		select * from tb_users where name=#{name}
	</select>
    <!-- 用户注册，添加用户 -->
	<insert id="registerUser" parameterType="User">
	<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
		SELECT LAST_INSERT_ID()
	</selectKey>
	   insert into tb_users values(#{id},#{name},#{pwd},#{email},#{phone},#{role})
    </insert>
    <!--查询所有用户信息  -->
	<select id="selectUsers" resultType="User">
		select * from tb_users where role = 1 or role = 0
	</select>
	<!-- 根据用户id删除用户 -->
	<delete id="deleteUser" parameterType="int">
		delete  from tb_users where id = #{id}
	</delete>
	<!-- 根据id查询用户 -->
	<select id="selectUser" parameterType="int" resultType="User">
		select * from tb_users where id = #{id}
	</select>
	<!-- 根据修改用户的信息 -->
	<update id="updateUser" parameterType="User">
		update tb_users set name = #{name},
		pwd = #{pwd},
		email = #{email},
		phone = #{phone}
		where id =#{id} 
	</update>
</mapper>